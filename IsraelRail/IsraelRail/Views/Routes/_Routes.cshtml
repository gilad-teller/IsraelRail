@using IsraelRail.Models.ViewModels
@model IEnumerable<Route>

<div>
    <hr />
    @foreach (Route r in Model)
    {
        Stop firstTotal = r.Trains.FirstOrDefault().OrigintStop;
        Stop lastTotal = r.Trains.LastOrDefault().DestinationStop;
        <div class="card mb-2" id="route-@r.Index">
            <div class="card-body">
                <h5 class="card-title">@firstTotal.Departure.Value.ToString("HH:mm") <i class="fas fa-arrow-right"></i> @lastTotal.Arrival.Value.ToString("HH:mm") @if (r.IsExchange) { <i class="fas fa-exchange-alt"></i> }</h5>
                <h6 class="card-subtitle mb-2 text-muted"><i class="far fa-clock"></i> @r.EstimatedTime.ToString("g")</h6>
                <ul class="list-group list-group-flush">
                    @{int i = 0;}
                    @foreach (Train t in r.Trains)
                    {
                        i++;
                        <li class="list-group-item">
                            <p class="card-text">
                                Train @t.TrainNumber
                                @if (t.Accesability)
                                {
                                    <i class="fas fa-wheelchair"></i>
                                }
                                @if (t.ReservedSeats)
                                {
                                    <i class="fas fa-couch"></i>
                                }
                                @if (t.Equipment != null)
                                {
                                    <i class="fas fa-train"></i>@t.Equipment
                                }
                                @if (t.Carriages > 0)
                                {
                                    @t.Carriages<span> Carriages</span>
                                }
                                <partial name="_Delay" model="t.Delay" />
                            </p>
                            <div id="short-@r.Index-@t.TrainNumber">
                                <partial name="_Stop" model="t.OrigintStop" />
                                <p class="card-text text-center"><i class="fas fa-arrow-alt-circle-down hand" onclick="ToggleShortLong(@r.Index, @t.TrainNumber)"></i></p>
                                <partial name="_Stop" model="t.DestinationStop" />
                            </div>
                            <div id="long-@r.Index-@t.TrainNumber" style="display: none">
                                <i class="fas fa-times hand" onclick="ToggleShortLong(@r.Index, @t.TrainNumber)"></i>
                                @foreach (Stop s in t.Stops)
                                {
                                    <partial name="_Stop" model="s" />
                                    if (s.Station == t.CurrentStation && t.NextStation != E_Station.None)
                                    {
                                        <div class="spinner-grow spinner-grow-sm" role="status">
                                            <span class="sr-only">█</span>
                                        </div>
                                    }
                                }
                            </div>
                        </li>
                        @if (i != r.Trains.Count)
                        {
                            <li class="list-group-item">
                                <p class="card-text text-center"><i class="fas fa-exchange-alt"></i></p>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    }
</div>
<input type="hidden" id="toShow" value="@ViewBag.ToShow" />